#!/bin/bash
# Ce script est con√ßu pour le d√©ploiement sur Vercel
# Il v√©rifie les variables d'environnement essentielles pour PostgreSQL

# V√©rifier si nous sommes sur Vercel
if [ "$VERCEL" = "1" ]; then
    echo "‚ö° Environnement Vercel d√©tect√©"
    
    # V√©rifier si DATABASE_URL et DIRECT_URL sont configur√©s correctement
    if [[ ! $DATABASE_URL =~ ^postgres(ql)?:// ]]; then
        echo "‚ùå ERREUR: DATABASE_URL n'est pas correctement configur√© pour PostgreSQL"
        echo "‚ùå Le d√©ploiement risque d'√©chouer sans une URL PostgreSQL valide"
        
        # Utiliser une URL factice pour la construction (ne sera pas utilis√©e en r√©alit√©)
        export DATABASE_URL="postgresql://fake:fake@localhost:5432/fakeverceldb"
        
        echo "‚ÑπÔ∏è URL factice configur√©e: $DATABASE_URL"
    else
        echo "‚úÖ DATABASE_URL correctement configur√© pour PostgreSQL"
    fi
    
    if [[ ! $DIRECT_URL =~ ^postgres(ql)?:// ]]; then
        echo "‚ö†Ô∏è DIRECT_URL n'est pas correctement configur√© pour PostgreSQL"
        echo "‚ö†Ô∏è Les migrations pourraient √©chouer sans cette variable"
        # Pas besoin d'une URL factice pour DIRECT_URL car il est optionnel pour la construction
    else
        echo "‚úÖ DIRECT_URL correctement configur√© pour PostgreSQL"
    fi
else
    echo "üñ•Ô∏è Environnement local d√©tect√©"
fi

# Continuer avec le processus de construction normal
echo "üîÑ Ex√©cution du script de validation de l'URL..."
node scripts/validate-db-url.js

echo "üîÑ G√©n√©ration du client Prisma..."
npx prisma generate --schema=./prisma/schema.prisma

echo "üîÑ Application des migrations..."
npx prisma migrate deploy --schema=./prisma/schema.prisma

echo "üîÑ Cr√©ation de l'utilisateur admin par d√©faut..."
node scripts/init-admin.js

echo "üîÑ Construction de l'application Next.js..."
ESLINT_DISABLE_WARNINGS=1 next build --no-lint
